{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Badge.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  gradient,\n  variant,\n  size\n}) => {\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    gradient,\n    variant: variant || \"filled\"\n  });\n  return {\n    root: {\n      \"--badge-height\": getSize(size, \"badge-height\"),\n      \"--badge-padding-x\": getSize(size, \"badge-padding-x\"),\n      \"--badge-fz\": getSize(size, \"badge-fz\"),\n      \"--badge-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--badge-bg\": color || variant ? colors.background : void 0,\n      \"--badge-color\": color || variant ? colors.color : void 0,\n      \"--badge-bd\": color || variant ? colors.border : void 0,\n      \"--badge-dot-color\": variant === \"dot\" ? getThemeColor(color, theme) : void 0\n    }\n  };\n});\nconst Badge = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Badge\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Badge\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    variant,\n    mod: {\n      block: fullWidth\n    },\n    ...getStyles(\"root\", {\n      variant\n    }),\n    ref,\n    ...others\n  }, leftSection && /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"section\"),\n    \"data-position\": \"left\"\n  }, leftSection), /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"label\")\n  }, children), rightSection && /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"section\"),\n    \"data-position\": \"right\"\n  }, rightSection));\n});\nBadge.classes = classes;\nBadge.displayName = \"@mantine/core/Badge\";\nexport { Badge };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","theme","radius","color","gradient","variant","size","colors","variantColorResolver","primaryColor","root","getSize","getRadius","background","border","getThemeColor","Badge","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","leftSection","rightSection","children","fullWidth","others","getStyles","useStyles","name","classes","React","createElement","Box","mod","block","displayName"],"sources":["/Users/finazaria/Documents/TA Code - Interface/thesis-ortho-proto/react_upload/node_modules/@mantine/core/src/components/Badge/Badge.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Badge.module.css';\n\nexport type BadgeStylesNames = 'root' | 'section' | 'label';\nexport type BadgeVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'dot'\n  | 'transparent'\n  | 'white'\n  | 'default'\n  | 'gradient';\n\nexport type BadgeCssVariables = {\n  root:\n    | '--badge-height'\n    | '--badge-padding-x'\n    | '--badge-fz'\n    | '--badge-radius'\n    | '--badge-bg'\n    | '--badge-color'\n    | '--badge-bd'\n    | '--badge-dot-color';\n};\n\nexport interface BadgeProps extends BoxProps, StylesApiProps<BadgeFactory> {\n  /** Controls `font-size`, `height` and horizontal `padding`, `'md'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Gradient configuration used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Content displayed on the left side of the badge label */\n  leftSection?: React.ReactNode;\n\n  /** Content displayed on the right side of the badge label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether Badge should take 100% of its parent width, `false` by default */\n  fullWidth?: boolean;\n\n  /** Main badge content */\n  children?: React.ReactNode;\n}\n\nexport type BadgeFactory = PolymorphicFactory<{\n  props: BadgeProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: BadgeStylesNames;\n  vars: BadgeCssVariables;\n  variant: BadgeVariant;\n}>;\n\nconst defaultProps: Partial<BadgeProps> = {};\n\nconst varsResolver = createVarsResolver<BadgeFactory>(\n  (theme, { radius, color, gradient, variant, size }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n    });\n\n    return {\n      root: {\n        '--badge-height': getSize(size, 'badge-height'),\n        '--badge-padding-x': getSize(size, 'badge-padding-x'),\n        '--badge-fz': getSize(size, 'badge-fz'),\n        '--badge-radius': radius === undefined ? undefined : getRadius(radius),\n        '--badge-bg': color || variant ? colors.background : undefined,\n        '--badge-color': color || variant ? colors.color : undefined,\n        '--badge-bd': color || variant ? colors.border : undefined,\n        '--badge-dot-color': variant === 'dot' ? getThemeColor(color, theme) : undefined,\n      },\n    };\n  }\n);\n\nexport const Badge = polymorphicFactory<BadgeFactory>((_props, ref) => {\n  const props = useProps('Badge', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BadgeFactory>({\n    name: 'Badge',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      variant={variant}\n      mod={{ block: fullWidth }}\n      {...getStyles('root', { variant })}\n      ref={ref}\n      {...others}\n    >\n      {leftSection && (\n        <span {...getStyles('section')} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      <span {...getStyles('label')}>{children}</span>\n      {rightSection && (\n        <span {...getStyles('section')} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nBadge.classes = classes;\nBadge.displayName = '@mantine/core/Badge';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAaA,MAAMA,YAAY,GAAG,EAAE;AACvB,MAAMC,YAAY,GAAGC,kBAAkB,CACrC,CAACC,KAAK,EAAE;EAAEC,MAAM;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAI,CAAE,KAAK;EACrD,MAAMC,MAAM,GAAGN,KAAK,CAACO,oBAAoB,CAAC;IACxCL,KAAK,EAAEA,KAAK,IAAIF,KAAK,CAACQ,YAAY;IAClCR,KAAK;IACLG,QAAQ;IACRC,OAAO,EAAEA,OAAO,IAAI;EAC1B,CAAK,CAAC;EACF,OAAO;IACLK,IAAI,EAAE;MACJ,gBAAgB,EAAEC,OAAO,CAACL,IAAI,EAAE,cAAc,CAAC;MAC/C,mBAAmB,EAAEK,OAAO,CAACL,IAAI,EAAE,iBAAiB,CAAC;MACrD,YAAY,EAAEK,OAAO,CAACL,IAAI,EAAE,UAAU,CAAC;MACvC,gBAAgB,EAAEJ,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGU,SAAS,CAACV,MAAM,CAAC;MAChE,YAAY,EAAEC,KAAK,IAAIE,OAAO,GAAGE,MAAM,CAACM,UAAU,GAAG,KAAK,CAAC;MAC3D,eAAe,EAAEV,KAAK,IAAIE,OAAO,GAAGE,MAAM,CAACJ,KAAK,GAAG,KAAK,CAAC;MACzD,YAAY,EAAEA,KAAK,IAAIE,OAAO,GAAGE,MAAM,CAACO,MAAM,GAAG,KAAK,CAAC;MACvD,mBAAmB,EAAET,OAAO,KAAK,KAAK,GAAGU,aAAa,CAACZ,KAAK,EAAEF,KAAK,CAAC,GAAG,KAAK;IAC7E;EACP,CAAK;AACF,CACH,CAAC;AACW,MAACe,KAAK,GAAGC,kBAAkB,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACvD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,OAAO,EAAEvB,YAAY,EAAEoB,MAAM,CAAC;EACrD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJzB,MAAM;IACNC,KAAK;IACLC,QAAQ;IACRwB,WAAW;IACXC,YAAY;IACZC,QAAQ;IACRzB,OAAO;IACP0B,SAAS;IACT,GAAGC;EACJ,IAAGZ,KAAK;EACT,MAAMa,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,OAAO;IACbf,KAAK;IACLgB,OAAO;IACPb,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJ5B;EACJ,CAAG,CAAC;EACF,sBAAuBsC,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACElC,OAAO;IACPmC,GAAG,EAAE;MAAEC,KAAK,EAAEV;IAAW;IACzB,GAAGE,SAAS,CAAC,MAAM,EAAE;MAAE5B;IAAO,CAAE,CAAC;IACjCc,GAAG;IACH,GAAGa;EACJ,GACDJ,WAAW,mBAAoBS,KAAK,CAACC,aAAa,CAAC,MAAM,EAAE;IAAE,GAAGL,SAAS,CAAC,SAAS,CAAC;IAAE,eAAe,EAAE;EAAM,CAAE,EAAEL,WAAW,CAAC,EACjI,eAAoBS,KAAK,CAACC,aAAa,CAAC,MAAM,EAAE;IAAE,GAAGL,SAAS,CAAC,OAAO;EAAG,GAAEH,QAAQ,CAAC,EAChFD,YAAY,mBAAoBQ,KAAK,CAACC,aAAa,CAAC,MAAM,EAAE;IAAE,GAAGL,SAAS,CAAC,SAAS,CAAC;IAAE,eAAe,EAAE;EAAO,CAAE,EAAEJ,YAAY,CACnI,CAAG;AACH,CAAC,CAAE;AACHb,KAAK,CAACoB,OAAO,GAAGA,OAAO;AACvBpB,KAAK,CAAC0B,WAAW,GAAG,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}