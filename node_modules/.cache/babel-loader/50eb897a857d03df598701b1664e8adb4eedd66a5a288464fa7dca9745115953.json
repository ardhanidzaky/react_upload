{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { getSafeId } from '../../core/utils/get-safe-id/get-safe-id.mjs';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { TabsProvider } from './Tabs.context.mjs';\nimport { TabsList } from './TabsList/TabsList.mjs';\nimport { TabsPanel } from './TabsPanel/TabsPanel.mjs';\nimport { TabsTab } from './TabsTab/TabsTab.mjs';\nimport classes from './Tabs.module.css.mjs';\nconst VALUE_ERROR = \"Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value\";\nconst defaultProps = {\n  keepMounted: true,\n  orientation: \"horizontal\",\n  loop: true,\n  activateTabWithKeyboard: true,\n  allowTabDeactivation: false,\n  unstyled: false,\n  inverted: false,\n  variant: \"default\",\n  placement: \"left\"\n};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color\n}) => ({\n  root: {\n    \"--tabs-radius\": getRadius(radius),\n    \"--tabs-color\": getThemeColor(color, theme)\n  }\n}));\nconst Tabs = factory((_props, ref) => {\n  const props = useProps(\"Tabs\", defaultProps, _props);\n  const {\n    defaultValue,\n    value,\n    onChange,\n    orientation,\n    children,\n    loop,\n    id,\n    activateTabWithKeyboard,\n    allowTabDeactivation,\n    variant,\n    color,\n    radius,\n    inverted,\n    placement,\n    keepMounted,\n    classNames,\n    styles,\n    unstyled,\n    className,\n    style,\n    vars,\n    ...others\n  } = props;\n  const uid = useId(id);\n  const [currentTab, setCurrentTab] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange\n  });\n  const getStyles = useStyles({\n    name: \"Tabs\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(TabsProvider, {\n    value: {\n      placement,\n      value: currentTab,\n      orientation,\n      id: uid,\n      loop,\n      activateTabWithKeyboard,\n      getTabId: getSafeId(`${uid}-tab`, VALUE_ERROR),\n      getPanelId: getSafeId(`${uid}-panel`, VALUE_ERROR),\n      onChange: setCurrentTab,\n      allowTabDeactivation,\n      variant,\n      color,\n      radius,\n      inverted,\n      keepMounted,\n      unstyled,\n      getStyles\n    }\n  }, /* @__PURE__ */React.createElement(Box, {\n    ref,\n    id: uid,\n    variant,\n    mod: {\n      orientation,\n      inverted: orientation === \"horizontal\" && inverted,\n      placement: orientation === \"vertical\" && placement\n    },\n    ...getStyles(\"root\"),\n    ...others\n  }, children));\n});\nTabs.classes = classes;\nTabs.displayName = \"@mantine/core/Tabs\";\nTabs.Tab = TabsTab;\nTabs.Panel = TabsPanel;\nTabs.List = TabsList;\nexport { Tabs };","map":{"version":3,"names":["VALUE_ERROR","defaultProps","keepMounted","orientation","loop","activateTabWithKeyboard","allowTabDeactivation","unstyled","inverted","variant","placement","varsResolver","createVarsResolver","theme","radius","color","root","getRadius","getThemeColor","Tabs","factory","_props","ref","props","useProps","defaultValue","value","onChange","children","id","classNames","styles","className","style","vars","others","uid","useId","currentTab","setCurrentTab","useUncontrolled","finalValue","getStyles","useStyles","name","classes","React","createElement","TabsProvider","getTabId","getSafeId","getPanelId","Box","mod","displayName","Tab","TabsTab","Panel","TabsPanel","List","TabsList"],"sources":["/Users/finazaria/Documents/TA Code - Interface/thesis-ortho-proto/react_upload/node_modules/@mantine/core/src/components/Tabs/Tabs.tsx"],"sourcesContent":["import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getSafeId,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { TabsProvider } from './Tabs.context';\nimport { TabsList, TabsListStylesNames } from './TabsList/TabsList';\nimport { TabsPanel, TabsPanelStylesNames } from './TabsPanel/TabsPanel';\nimport { TabsTab, TabsTabStylesNames } from './TabsTab/TabsTab';\nimport classes from './Tabs.module.css';\n\nexport type TabsStylesNames =\n  | 'root'\n  | TabsListStylesNames\n  | TabsPanelStylesNames\n  | TabsTabStylesNames;\n\nexport type TabsVariant = 'default' | 'outline' | 'pills';\nexport type TabsCssVariables = {\n  root: '--tabs-color' | '--tabs-radius';\n};\n\nexport interface TabsProps\n  extends BoxProps,\n    StylesApiProps<TabsFactory>,\n    ElementProps<'div', 'defaultValue' | 'value' | 'onChange'> {\n  /** Default value for uncontrolled component */\n  defaultValue?: string | null;\n\n  /** Value for controlled component */\n  value?: string | null;\n\n  /** Called when value changes */\n  onChange?: (value: string | null) => void;\n\n  /** Tabs orientation, `'horizontal'` by default */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** `Tabs.List` placement relative to `Tabs.Panel`, applicable only when `orientation=\"vertical\"`, `'left'` by default */\n  placement?: 'left' | 'right';\n\n  /** Base id, used to generate ids to connect labels with controls, generated randomly by default */\n  id?: string;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** Determines whether tab should be activated with arrow key press, `true` by default */\n  activateTabWithKeyboard?: boolean;\n\n  /** Determines whether tab can be deactivated, `false` by default */\n  allowTabDeactivation?: boolean;\n\n  /** Tabs content */\n  children: React.ReactNode;\n\n  /** Changes colors of `Tabs.Tab` components when variant is `pills` or `default`, does nothing for other variants */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether tabs should have inverted styles, `false` by default */\n  inverted?: boolean;\n\n  /** If set to `false`, `Tabs.Panel` content will be unmounted when the associated tab is not active, `true` by default */\n  keepMounted?: boolean;\n}\n\nexport type TabsFactory = Factory<{\n  props: TabsProps;\n  ref: HTMLDivElement;\n  variant: TabsVariant;\n  stylesNames: TabsStylesNames;\n  vars: TabsCssVariables;\n  staticComponents: {\n    Tab: typeof TabsTab;\n    Panel: typeof TabsPanel;\n    List: typeof TabsList;\n  };\n}>;\n\nconst VALUE_ERROR =\n  'Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value';\n\nconst defaultProps: Partial<TabsProps> = {\n  keepMounted: true,\n  orientation: 'horizontal',\n  loop: true,\n  activateTabWithKeyboard: true,\n  allowTabDeactivation: false,\n  unstyled: false,\n  inverted: false,\n  variant: 'default',\n  placement: 'left',\n};\n\nconst varsResolver = createVarsResolver<TabsFactory>((theme, { radius, color }) => ({\n  root: {\n    '--tabs-radius': getRadius(radius),\n    '--tabs-color': getThemeColor(color, theme),\n  },\n}));\n\nexport const Tabs = factory<TabsFactory>((_props, ref) => {\n  const props = useProps('Tabs', defaultProps, _props);\n  const {\n    defaultValue,\n    value,\n    onChange,\n    orientation,\n    children,\n    loop,\n    id,\n    activateTabWithKeyboard,\n    allowTabDeactivation,\n    variant,\n    color,\n    radius,\n    inverted,\n    placement,\n    keepMounted,\n    classNames,\n    styles,\n    unstyled,\n    className,\n    style,\n    vars,\n    ...others\n  } = props;\n\n  const uid = useId(id);\n\n  const [currentTab, setCurrentTab] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const getStyles = useStyles<TabsFactory>({\n    name: 'Tabs',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TabsProvider\n      value={{\n        placement,\n        value: currentTab,\n        orientation,\n        id: uid,\n        loop,\n        activateTabWithKeyboard,\n        getTabId: getSafeId(`${uid}-tab`, VALUE_ERROR),\n        getPanelId: getSafeId(`${uid}-panel`, VALUE_ERROR),\n        onChange: setCurrentTab,\n        allowTabDeactivation,\n        variant,\n        color,\n        radius,\n        inverted,\n        keepMounted,\n        unstyled,\n        getStyles,\n      }}\n    >\n      <Box\n        ref={ref}\n        id={uid}\n        variant={variant}\n        mod={{\n          orientation,\n          inverted: orientation === 'horizontal' && inverted,\n          placement: orientation === 'vertical' && placement,\n        }}\n        {...getStyles('root')}\n        {...others}\n      >\n        {children}\n      </Box>\n    </TabsProvider>\n  );\n});\n\nTabs.classes = classes;\nTabs.displayName = '@mantine/core/Tabs';\nTabs.Tab = TabsTab;\nTabs.Panel = TabsPanel;\nTabs.List = TabsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}